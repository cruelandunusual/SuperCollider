{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red0\green0\blue191;\red0\green0\blue0;\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs34 \cf2 //make a SynthDef for a short slice of sound extracted from a buffer starting at chosen position\cf0 \
(\
\cf3 SynthDef\cf0 (\cf4 \\shortsample\cf0 ,\{\cf3 arg\cf0  buffer, dur=0.05, pos = 0.0, amp= 0.5, pan= 0.0;\
	\cf3 var\cf0  env, source;\
	\
	source = \cf3 PlayBuf\cf0 .ar(1,buffer,startPos:pos*\cf3 BufFrames\cf0 .ir(buffer));\
	\
	env = \cf3 EnvGen\cf0 .ar(\cf3 Env\cf0 ([0,1,1,0],[0.01,dur,0.01]),doneAction:2);\
	\
	\cf3 Out\cf0 .ar(0,\cf3 Pan2\cf0 .ar(env*source*amp,pan))\
	\
\}).add\
)\
\
\cf2 //need a sound file to grab bits of sound from\cf0 \
b = \cf3 Buffer\cf0 .read(s,\cf5 Platform\cf6 .resourceDir +/+\cf7 "sounds/a11wlk01.wav"\cf0 );  \
\
\cf2 //test the SynthDef:\cf0 \
\cf3 Synth\cf0 (\cf4 \\shortsample\cf0 , [\cf4 \\buffer\cf0 ,b,\cf4 \\pos\cf0 ,0.5,\cf4 \\dur\cf0 ,0.05])\
\
\cf2 //schedule Synths over time, increase duration with count\cf0 \
(\
\{\
10.do\{\cf3 arg\cf0  count; \
\cf3 Synth\cf0 (\cf4 \\shortsample\cf0 , [\cf4 \\buffer\cf0 ,b,\cf4 \\pos\cf0 ,0.5,\cf4 \\dur\cf0 ,0.1*count]);\
0.05.wait;\
\}\
\}.fork\
)\
\
\cf2 //another example, with random selection of durations, and envelope control of starting pos\cf0 \
(\
\cf3 var\cf0  grainspacing = 0.05; \
\cf3 var\cf0  env = \cf3 Env\cf0 ([0,1,0.3,1.0],[2.0,2.5,0.5]); \cf2 //use a language side envelope to vary position\cf0 \
\
\{\
100.do\{\cf3 arg\cf0  count; \
\cf3 var\cf0  time = count*grainspacing;\
	\
\cf3 Synth\cf0 (\cf4 \\shortsample\cf0 , [\cf4 \\buffer\cf0 ,b,\cf4 \\pos\cf0 ,env.at(time),\cf4 \\dur\cf0 ,rrand(0.01,0.05)]);\
grainspacing.wait;\
\}\
\}.fork\
)\
\
\cf2 //load another buffer\cf0 \
c = \cf3 Buffer\cf0 .read(s,
\fs36 \cf5 Platform\cf6 .resourceDir +/+
\fs34 \cf7 "sounds/SinedPink.aiff"\cf0 ); \
\
\
\cf2 //granular cross fade; as increase density of grains from one, reduce from another (done in a basic probabilistic way here). Doesn't sound great with these two sounds, but could certainly be improved by exploring other sources and mixing strategies\cf0 \
(\
\cf3 var\cf0  grainspacing = 0.05; \
\cf3 var\cf0  mixprobability = \cf3 Env\cf0 ([0.0,1.0,0.0],[3.0,2.0]); \cf2 //use a language side envelope to vary position\cf0 \
\
\{\
100.do\{\cf3 arg\cf0  count; \
\cf3 var\cf0  time = count*grainspacing;\
	\
\cf3 Synth\cf0 (\cf4 \\shortsample\cf0 , [\cf4 \\buffer\cf0 ,if(mixprobability.at(time).coin,c,b),\cf4 \\pos\cf0 ,time*0.1,\cf4 \\dur\cf0 ,grainspacing*4.0,\\amp, 0.25]);\
grainspacing.wait;\
\}\
\}.fork\
)\
\
\
\
\
}