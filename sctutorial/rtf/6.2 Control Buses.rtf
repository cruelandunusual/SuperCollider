{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green255\blue0;\red0\green0\blue191;\red191\green0\blue0;
\red0\green115\blue0;\red0\green0\blue191;\red0\green0\blue0;\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs36 \cf2 Control Buses\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
Just like .kr is control rate and .ar audio rate, there are Control Buses as well as the Audio Buses.\
\
\
\
a= \cf3 Bus\cf0 .audio(s,1) \cf4 //makes a 1-channel (mono) virtual audio bus\cf0 \
\
c= \cf3 Bus\cf0 .control(s,1) \cf4 //makes a 1-channel (mono) virtual control bus\cf0 \
\
a.index \cf4 //index of this bus\cf0 \
\
c.index \cf4 //and of the control bus\cf0 \
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
When you set a value you are setting the current value held by the bus. You can also write to and from any bus using In and Out:\
\
c.set(9); \cf4 //set current value to 9\cf0 \
\
If in a SynthDef I used \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 Out\cf0 .kr(c.index, \cf3 SinOsc\cf0 .kr)  \cf4 //Any other .kr UGen other than SinOsc could go here\cf0 \
\
I would be writing at control rate to the control bus over time, and might read it somewhere else:\
\
\cf3 In\cf0 .kr(c.index, 1) \cf4 //read 1 channel from this control bus location\cf0 \
\
This is a standard method of inter-Node communication- different Synths can read or write to the same bus. \
\
Any argument of a Synth can be mapped to by control buses:\
\
(\
\cf3 SynthDef\cf0 (\cf5 \\mapexample\cf0 ,\{\cf3 arg\cf0  freq=440;\
\
\cf3 Out\cf0 .ar(0,\cf3 SinOsc\cf0 .ar(freq,0,0.1))\
\}).add\
)\
\
g= \cf3 Synth\cf0 (\cf5 \\mapexample\cf0 );\
\
c.set(660);\
\
g.map(\cf5 \\freq\cf0 , c.index)\
\
c.set(770);\
\
h= \{\cf3 Out\cf0 .kr(c.index, \cf3 SinOsc\cf0 .ar(550,0,100,1000))\}.play;\
\
h.free;\
\
g.set(\cf5 \\freq\cf0 , 550)\
\
\
\
Here is an additional example involving PlayBuf\
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf4 //this loads into a buffer the default sound that comes with SuperCollider\cf0 \
\cf4 //.read brings in the whole sound at once\cf0 \
b = \cf3 Buffer\cf0 .read(s,\cf6 Platform\cf7 .resourceDir +/+\cf8 "sounds/a11wlk01.wav"\cf0 );\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 SynthDef\cf0 (\cf8 "playbuf"\cf0 ,\{ \cf3 arg\cf0  out=0,bufnum=0, rate=1, trigger=1, startPos=0, loop=1;\
	\cf3 Out\cf0 .ar(out,\
		\cf3 Pan2\cf0 .ar(\cf3 PlayBuf\cf0 .ar(1,bufnum, \cf3 BufRateScale\cf0 .kr(bufnum)*rate, trigger, \cf3 BufFrames\cf0 .ir(b.bufnum)*startPos, loop),0.0)\
	)\
\}).add; \
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf4 //make a new control Synth, playing on control buses\cf0 \
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 SynthDef\cf0 (\cf8 "playbufcontrols"\cf0 ,\{\
	\
	\cf4 //control for retrigger (impulse with modulated rate)\cf0 \
	\cf3 Out\cf0 .kr(0,\cf3 Impulse\cf0 .kr(\cf3 LFNoise0\cf0 .kr(0.5, 5, 6)));\
	\
	\cf4 //control for jump position in sample (any random frame)\cf0 \
	\cf3 Out\cf0 .kr(1,\cf3 LFNoise0\cf0 .kr(0.25,0.5,0.5));\
	\
\}).play(s); \
)\
\
a=\cf3 Synth\cf0 (\cf5 \\playbuf\cf0 , [\cf5 \\out\cf0 , 0, \cf5 \\bufnum\cf0 , b.bufnum, \cf5 \\rate\cf0 , 1, \cf5 \\trigger\cf0 , \cf8 "c0"\cf0 , \cf5 \\startPos\cf0 , \cf8 "c1"\cf0 ]);\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf4 //showing unmapping of control signals- unmap the modulation of jump position when retriggered, it will now be fixed\cf0 \
a.set(\cf5 \\startPos\cf0 ,\cf8 "c"\cf0 )\
\
\cf4 //set fixed chosen start frame\cf0 \
a.set(\cf5 \\startPos\cf0 ,30000)\
 }