{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red0\green0\blue0;\red191\green0\blue0;\red0\green0\blue191;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 //The mystery of getting mouse values back in the language solved using OSCresponder and SendTrig\cf0 \
\
\
(\
\cf3 SynthDef\cf0 (\cf4 \\mousedemo\cf0 , \{\
\cf3 var\cf0  mx,my, impulse;\
\
mx= \cf3 MouseX\cf0 .kr(0.0,1.0);\
my= \cf3 MouseY\cf0 .kr(0.0,1.0);\
\
impulse= \cf3 Impulse\cf0 .kr(15); \cf2 //update at 15Hz = haptic rate\cf0 \
\
\cf3 SendTrig\cf0 .kr(impulse, 100, mx);\
\cf3 SendTrig\cf0 .kr(impulse, 101, my);\
\
\}).play;\
)\
\
\
\
\
(\
\cf3 var\cf0  mx, my; \
\
\cf3 OSCresponder\cf0 (s.addr,\cf4 '/tr'\cf0 ,\{ \cf3 arg\cf0  time,responder,msg;\
\cf3 var\cf0  value; \
\
\cf2 //Post << msg << nl;\cf0 \
value= msg[3];\
\
switch (msg[2],\
100, \{mx= value;\},\
101,\{my=value;\});\
\}).add;	\
\
\{\cf3 inf\cf0 .do\{[\cf4 \\mx\cf0 , mx, \cf4 \\my\cf0 , my].postln; 0.5.wait;\}\}.fork; \
\
)		\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf5 \
\cf6 //Note that on SC3.5 or earlier you could do:\cf5 \
\cf7 Platform\cf5 .getMouseCoords}