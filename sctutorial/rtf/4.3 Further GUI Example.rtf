{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red191\green0\blue0;\red0\green0\blue191;
\red0\green115\blue0;\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs36 \cf2 \
\cf3 //This example was originally created in a seminar. It illustrates creating a new SynthDef, then a GUI which controls an active Synth based on that def. \cf2 \
\
\cf3 //As an exercise, you might want to expand this by adding labels to the GUI window to show a user what each control does! \cf2 \
\
(\
\cf4 SynthDef\cf2 (\cf5 \\mysound\cf2 ,\{\cf4 arg\cf2  density=100, centrefreq=1000, rq=0.1, amp=0.1;\
	\cf4 var\cf2  dust, filter; \
	\
	\cf3 //Dust is a stochastic source of impulse clicks, density per second\cf2 \
	dust= \cf4 Dust\cf2 .ar(density);\
	\
	\cf3 //the filtering is twofold; shaping the clicks via attack and decay smoothing in Decay2, and then a Band Pass Filter\cf2 \
	filter= \cf4 BPF\cf2 .ar(50*\cf4 Decay2\cf2 .ar(dust,0.01,0.05),centrefreq, rq);\
	\
	\cf4 Out\cf2 .ar(0,(filter*amp).dup(2))\
\}).add\
)\
\
\
\cf3 //GUI code. The MIDI Controller option is commented out; it was added spontaneously to answer an inquiry about how to hook up an external control to a graphical user interface control. You may want to look back at this after later material in the course on MIDI. \cf2 \
(\
\cf4 var\cf2  w, slid2d, knob, numberbox; \
\cf4 var\cf2  sound; \
\
\cf3 //use that SynthDef! \cf2 \
sound= \cf4 Synth\cf2 (\cf5 \\mysound\cf2 );\
\
w= \cf4 Window\cf2 (\cf6 "mysound's window"\cf2 ,\cf4 Rect\cf2 (100,300,300,200));\
\
slid2d= \cf4 Slider2D\cf2 (w,\cf4 Rect\cf2 (10,10,180,180));\
\
knob= \cf4 Knob\cf2 (w,\cf4 Rect\cf2 (210,10,80,80));\
\
numberbox= \cf4 NumberBox\cf2 (w,\cf4 Rect\cf2 (210,110,80,80));\
\
\cf3 //slid2d.action = \{stuff...\} is the same as slid2d.action_(\{stuff...\})\cf2 \
slid2d.action = \{ \
	sound.set(\cf5 \\density\cf2 ,slid2d.x*100.0+1,\cf5 \\rq\cf2 ,slid2d.y*0.5+0.01);\
\}; \
\
knob.action=\{sound.set(\cf5 \\centrefreq\cf2 ,knob.value*2000+500)\};\
\
\cf3 //to let any MIDI control message set the knob position, and trigger the corresponding action\cf2 \
\cf3 /*\
MIDIIn.control=\{arg src,chan,num,val; \
	//defer avoids complaints from the system that the GUI is being updated outside of a safe thread; it pushes the code through to the AppClock (see week 6 of course)  \
	\{knob.value= (val/127.0); knob.action.value;\}.defer; \
\}; \
*/\cf2 \
\
numberbox.action=\{\cf4 var\cf2  temp; \
\
temp= numberbox.value.max(0.0).min(1.0);\
sound.set(\cf5 \\amp\cf2 ,temp);\
\
numberbox.value = temp;\
\};\
\
w.front; \
\
w.onClose= \{sound.free;\};\
)\
\
\
\
\
}